{"version":3,"sources":["../../../node_modules/.pnpm/dotenv@16.4.5/node_modules/dotenv/package.json","../../../node_modules/.pnpm/dotenv@16.4.5/node_modules/dotenv/lib/main.js","../../../node_modules/.pnpm/dotenv@16.4.5/node_modules/dotenv/lib/env-options.js","../../../node_modules/.pnpm/dotenv@16.4.5/node_modules/dotenv/lib/cli-options.js","../../../node_modules/.pnpm/dotenv@16.4.5/node_modules/dotenv/config.js","../src/index.ts","../src/commands/add.ts","../src/utils/ascii-arts.ts","../src/utils/logger.ts","../src/utils/get-package-manager.ts","../src/utils/get-suppoted.ts","../src/utils/get-package-info.ts"],"sourcesContent":["{\n  \"name\": \"dotenv\",\n  \"version\": \"16.4.5\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/main.d.ts\",\n      \"require\": \"./lib/main.js\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"lint-readme\": \"standard-markdown\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap tests/*.js --100 -Rspec\",\n    \"test:coverage\": \"tap --coverage-report=lcov\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"funding\": \"https://dotenvx.com\",\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@definitelytyped/dtslint\": \"^0.0.133\",\n    \"@types/node\": \"^18.11.3\",\n    \"decache\": \"^4.6.1\",\n    \"sinon\": \"^14.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"standard-markdown\": \"^7.1.0\",\n    \"standard-version\": \"^9.5.0\",\n    \"tap\": \"^16.3.0\",\n    \"tar\": \"^6.1.11\",\n    \"typescript\": \"^4.8.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"browser\": {\n    \"fs\": false\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsedAll, options)\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","// ../config.js accepts options via environment variables\nconst options = {}\n\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\n}\n\nif (process.env.DOTENV_CONFIG_PATH != null) {\n  options.path = process.env.DOTENV_CONFIG_PATH\n}\n\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\n}\n\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\n}\n\nif (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {\n  options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY\n}\n\nmodule.exports = options\n","const re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/\n\nmodule.exports = function optionMatcher (args) {\n  return args.reduce(function (acc, cur) {\n    const matches = cur.match(re)\n    if (matches) {\n      acc[matches[1]] = matches[2]\n    }\n    return acc\n  }, {})\n}\n","(function () {\n  require('./lib/main').config(\n    Object.assign(\n      {},\n      require('./lib/env-options'),\n      require('./lib/cli-options')(process.argv)\n    )\n  )\n})()\n","import \"dotenv/config\"\nimport { Command } from \"commander\";\n\nimport { add } from \"./commands/add\";\nimport { getPackageInfo } from \"./utils/get-package-info\";\n\nprocess.on(\"SIGINT\", () => process.exit(0));\nprocess.on(\"SIGTERM\", () => process.exit(0));\n\nasync function main() {\n  const packageInfo = await getPackageInfo();\n\n  const program = new Command()\n    .name(\"farmui\")\n    .description(\"Add natively farmed farmUI blocks \")\n    .version(\n      packageInfo.version || \"0.1.0\",\n      \"-v, --version\",\n      \"display the version number\",\n    );\n\n  program.addCommand(add)\n\n  program.parse();\n}\n\nmain();\n","import \"dotenv/config\";\nimport { existsSync, promises as fs } from \"fs\";\nimport path from \"path\";\nimport gradient from \"gradient-string\";\nimport { Command } from \"commander\";\nimport ora from \"ora\";\nimport { execa } from \"execa\";\nimport prompts from \"prompts\";\nimport { FARMUI_GRAFFITI } from \"../utils/ascii-arts\";\nimport { logger } from \"../utils/logger\";\nimport { custom, z } from \"zod\";\nimport { getPackageManager } from \"../utils/get-package-manager\";\nimport { framework_supports } from \"../utils/get-suppoted\";\nimport { type Config } from \"tailwindcss/types/config\";\nimport { TAILWIND_CONFIG } from \"../utils/templates\";\n\nprocess.on(\"SIGINT\", () => process.exit(0));\nprocess.on(\"SIGTERM\", () => process.exit(0));\n\nconst COMPONENT_REGISTERY_URL = \"https://farmui-api.vercel.app/api/components\";\ntype CompToAddProps = {\n  comp_path: string;\n  comp_content: string;\n};\nconst addCommandInput = z.object({\n  id: z.string(),\n  cwd: z.string(),\n});\nconst TAILWIND_EXTEND_PROPS = [\"animation\", \"keyframes\"];\nconsole.log(gradient(\"pink\", \"blue\")(FARMUI_GRAFFITI));\n\nexport const add = new Command()\n\n  .name(\"add\")\n  .description(\"add a new component or UI from farmui\")\n  .argument(\n    \"<string>\",\n    \"id of the component from https://farmui.com/components\"\n  )\n  // .option(\"--id\", \"id of the component\")\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .action(async (id, opts) => {\n    const options = addCommandInput.parse({\n      id,\n      ...opts,\n    });\n\n    const custom_cwd = path.resolve(options.cwd);\n    const default_fm = framework_supports[0];\n    let framework = default_fm.value; // the default one we supoort.\n    if (!existsSync(custom_cwd)) {\n      logger.error(`There is no ${custom_cwd} exists your paths.`);\n      process.exit(0);\n    }\n    let defaultDir = \"components\";\n\n    const custom_cwd_flag = process.cwd() === options.cwd;\n    // already found the id and next will be finding the component id\n    try {\n      if (!custom_cwd_flag) {\n        logger.info(`We are dumping the components inside of ${custom_cwd} `);\n      } else {\n        const { dir } = await prompts({\n          type: \"text\",\n          name: \"dir\",\n          message: `A directory to dump the components? `,\n          hint: \"components \",\n        });\n        if (dir) {\n          defaultDir = dir;\n        }\n      }\n      const { fm } = await prompts({\n        type: \"select\",\n        name: \"fm\",\n        message: \"Which framework do you want to use with?\",\n        hint: \"Space to select and Enter to submit.\",\n        instructions: false,\n        choices: framework_supports.map((fm) => ({\n          title: fm.name,\n          value: fm.value,\n          selected: fm.value === \"react\",\n        })),\n      });\n      if (fm) {\n        framework = fm;\n      }\n      if (framework !== \"react\") {\n        logger.error(\n          `We are not currently supporting ${fm} on https://farmui.com.`\n        );\n        logger.info(\n          \"Be a part of the community by adding an integration to your favorite framework, go for https://github.com/Kinfe123/farm-ui\"\n        );\n        process.exit(0);\n      }\n      // should be prompting it for directory the components to be stored (defaults to /components)\n      const path_ = path.join(custom_cwd, defaultDir);\n      const root_dir = path.join(path_, \"/farmui\");\n\n      const comp_fetch = await fetch(COMPONENT_REGISTERY_URL!);\n      let comp_db: any[] = await comp_fetch.json();\n      const select_files_by_id = comp_db.find((x) => x.id === options.id);\n      if (!select_files_by_id) {\n        logger.error(\"No such component exists with in this ID.\");\n        process.exit(0);\n      }\n\n      const exist = existsSync(root_dir);\n\n      if (exist) {\n        // logic for existing directory for componnts to be stored\n        const { proceed } = await prompts({\n          type: \"confirm\",\n          name: \"proceed\",\n          message: `Ready to install components and dependencies. Proceed?`,\n          initial: true,\n        });\n\n        if (!proceed) {\n          logger.info(\n            \"Make sure you have the right path to dump the components\"\n          );\n          process.exit(0);\n        }\n      } else {\n        await fs.mkdir(root_dir, { recursive: true });\n      }\n      const path_to_add: CompToAddProps[] = [];\n      // for now , the content we will support will be react based , toll we have updated the ednpoint\n      const root_comp_name = select_files_by_id.files[0].root.name;\n      const tailwind_values = select_files_by_id[\"tailwind\"];\n      if (tailwind_values) {\n        logger.info(\"The components need tailwind.config.(ts/js) change\");\n\n        const tailwind_config_js = path.join(\n          process.cwd(),\n          \"tailwind.config.js\"\n        );\n        const tailwind_config_ts = path.join(\n          process.cwd(),\n          \"tailwind.config.ts\"\n        );\n        let config_exists = \"ts\";\n        let is_config_exist = true;\n        if (\n          !existsSync(tailwind_config_ts) &&\n          !existsSync(tailwind_config_js)\n        ) {\n          is_config_exist = false;\n        }\n        if (!is_config_exist) {\n          logger.warn(\n            \"The tailwind.config.(js/ts) can not be found with in the given directory , Please make sure to intialize your project with tailwindcss or shadcn , may be any UI component that build on top of tailwind\"\n          );\n          logger.info(\"Skipping... and importing the components\");\n        } else {\n          // means the either the js or tailwind config exists\n          if (existsSync(tailwind_config_js)) {\n            config_exists = \"js\";\n          }\n          const tailwind_config_file = `tailwind.config.${config_exists}`;\n\n          const tailwin_config_path = path.join(\n            process.cwd(),\n            tailwind_config_file\n          );\n          const read_tailwind_config = await fs.readFile(\n            tailwin_config_path,\n            \"utf8\"\n          );\n          TAILWIND_EXTEND_PROPS.map((props) => {\n            if (props in tailwind_values) {\n              logger.info(\n                `For ${props} - copy the following and paste it to your ${tailwind_config_file}`\n              );\n              const tailwind_props_value = tailwind_values[props].content;\n              console.log({ [props]: tailwind_props_value });\n            }\n          });\n        }\n      }\n      const root_comp_content =\n        select_files_by_id.files[0].root.contents[framework].content;\n      const root_comp_path = path.join(root_dir, root_comp_name);\n      let child_comp = [];\n      if (select_files_by_id[1]) {\n        child_comp = select_files_by_id.files[1].child;\n      }\n      path_to_add.push({\n        comp_content: root_comp_content,\n        comp_path: root_comp_path,\n      });\n\n      const depends_on: any[] = child_comp;\n      depends_on.map((dep) => {\n        const child_comp_name = dep.name;\n        const child_comp_content = dep.contents[framework].content;\n        const child_comp_path = path.join(root_dir, child_comp_name);\n        path_to_add.push({\n          comp_content: child_comp_content,\n          comp_path: child_comp_path,\n        });\n      });\n      const spinner = ora(`Dumping your components...`);\n      let spinner_overwrite = ora(\"Overriting\");\n      const dependencies: string[] = select_files_by_id.dependencies;\n      if (!path_to_add) {\n        logger.warn(\"No component to add\");\n      } else {\n        path_to_add.map(async ({ comp_content, comp_path }) => {\n          const comp_write_path = `${comp_path}.tsx`;\n          if (existsSync(comp_write_path)) {\n            const { overwrite } = await prompts({\n              type: \"confirm\",\n              name: \"overwrite\",\n              message: `Override already existed component? Proceed?`,\n              initial: true,\n            });\n            if (overwrite) {\n              spinner_overwrite = ora(\n                `Overwriting the component at ${comp_write_path}....`\n              );\n              spinner_overwrite.start();\n              await fs.writeFile(`${comp_path}.tsx`, comp_content);\n            } else {\n              logger.info(\n                `Skipping: The component ${comp_write_path} already existed`\n              );\n            }\n          } else {\n            spinner.start();\n            await fs.writeFile(`${comp_path}.tsx`, comp_content);\n          }\n        });\n      }\n      const packageManager = await getPackageManager(custom_cwd);\n      if (dependencies?.length) {\n        await execa(`${packageManager}`, [\"install\", ...dependencies], {\n          cwd: process.cwd(),\n        });\n      }\n      spinner.stop();\n      spinner_overwrite.stop();\n      if (dependencies.length) {\n        logger.info(`Dependencies - ${dependencies.length} added`);\n        dependencies.map((dep) => {\n          logger.success(` + ${dep}`);\n        });\n      }\n      if (path_to_add) {\n        const path_for_comp = root_dir.split(\"/\");\n        const last_two =\n          path_for_comp[path_for_comp.length - 2] +\n          \"/\" +\n          path_for_comp[path_for_comp.length - 1];\n\n        logger.info(\n          `Components - ${path_to_add.length} added inside of ${last_two}`\n        );\n        path_to_add.map((comps) => {\n          const comp_names = comps.comp_path.split(\"/\");\n          const comp_name = comp_names[comp_names.length - 1];\n          logger.success(` + ${comp_name}`);\n        });\n      }\n      spinner.succeed(\"Successfully installed\");\n    } catch (err) {\n      logger.error(\"Error has occured!\");\n      console.log(\"Error: \", err);\n    }\n  });\n","export const FARMUI_GRAFFITI = `\n░▒▓████████▓▒░▒▓██████▓▒░░▒▓███████▓▒░░▒▓██████████████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓██████▓▒░░▒▓████████▓▒░▒▓███████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░  \n░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░░▒▓█▓▒░  v1.0.2 \n\n                                                                               \n`;\n","import chalk from \"chalk\"\n\nexport const logger = {\n  error(...args: unknown[]) {\n    console.log(chalk.red(...args))\n  },\n  warn(...args: unknown[]) {\n    console.log(chalk.yellow(...args))\n  },\n  info(...args: unknown[]) {\n    console.log(chalk.cyan(...args))\n  },\n  success(...args: unknown[]) {\n    console.log(chalk.green(...args))\n  },\n  break() {\n    console.log(\"\")\n  },\n}\n","import { detect } from \"@antfu/ni\"\n\nexport async function getPackageManager(\n  targetDir: string\n): Promise<\"yarn\" | \"pnpm\" | \"bun\" | \"npm\"> {\n  const packageManager = await detect({ programmatic: true, cwd: targetDir })\n\n  if (packageManager === \"yarn@berry\") return \"yarn\"\n  if (packageManager === \"pnpm@6\") return \"pnpm\"\n  if (packageManager === \"bun\") return \"bun\"\n\n  return packageManager ?? \"npm\"\n}\n","export const framework_supports = [\n    {\n        name: \"React\",\n        value: \"react\",\n\n    },\n    {\n        name: \"Vue\",\n        value: \"vue\",\n\n    },\n    {\n        name: \"Svelte\",\n        value: \"svelte\",\n\n    },\n    {\n        name: \"Html\",\n        value: \"html\",\n\n    },\n]","import path from \"path\"\nimport fs from \"fs-extra\"\nimport { type PackageJson } from \"type-fest\"\n\nexport function getPackageInfo() {\n  const packageJsonPath = path.join(\"package.json\")\n\n  return fs.readJSONSync(packageJsonPath) as PackageJson\n}\n"],"mappings":"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","names":["require_package","__commonJSMin","exports","module","require_main","__commonJSMin","exports","module","fs","path","os","crypto","packageJson","version","LINE","parse","src","obj","lines","match","key","value","maybeQuote","_parseVault","options","vaultPath","_vaultPath","result","DotenvModule","err","keys","_dotenvKey","length","decrypted","i","attrs","_instructions","error","_log","message","_warn","_debug","dotenvKey","uri","environment","environmentKey","ciphertext","possibleVaultPath","filepath","_resolveHome","envPath","_configVault","parsed","processEnv","configDotenv","dotenvPath","encoding","debug","optionPaths","lastError","parsedAll","e","config","decrypt","encrypted","keyStr","nonce","authTag","aesgcm","isRange","invalidKeyLength","decryptionFailed","populate","override","require_env_options","__commonJSMin","exports","module","options","require_cli_options","__commonJSMin","exports","module","re","args","acc","cur","matches","Command","existsSync","fs","path","gradient","Command","ora","execa","prompts","FARMUI_GRAFFITI","chalk","logger","args","z","detect","getPackageManager","targetDir","packageManager","framework_supports","COMPONENT_REGISTERY_URL","addCommandInput","z","TAILWIND_EXTEND_PROPS","gradient","FARMUI_GRAFFITI","add","Command","id","opts","options","custom_cwd","path","framework","framework_supports","existsSync","logger","defaultDir","custom_cwd_flag","dir","prompts","fm","path_","root_dir","select_files_by_id","x","proceed","fs","path_to_add","root_comp_name","tailwind_values","tailwind_config_js","tailwind_config_ts","config_exists","is_config_exist","tailwind_config_file","tailwin_config_path","read_tailwind_config","props","tailwind_props_value","root_comp_content","root_comp_path","child_comp","dep","child_comp_name","child_comp_content","child_comp_path","spinner","ora","spinner_overwrite","dependencies","comp_content","comp_path","comp_write_path","overwrite","packageManager","getPackageManager","execa","path_for_comp","last_two","comps","comp_names","comp_name","err","path","fs","getPackageInfo","packageJsonPath","main","packageInfo","getPackageInfo","program","Command","add"]}