import{Command as J}from"commander";import"dotenv/config";import{existsSync as P,promises as n}from"fs";import o from"path";import{Command as R}from"commander";import T from"ora";import{execa as E}from"execa";import f from"prompts";var b=process.env.COMPONENTS_REGISTRY_URL;console.log({COMPONENT_REGISTERY_URL:b});var l=new R().name("farmui-add").description("Adding a new component for farmui from terminal").argument("<string>","Id of the componnt from farmui.com").option("--id","id of the component").action(async(e,a)=>{try{let s="components",{dirName:r}=await f({type:"text",name:"dirName",message:"A directory where it should be living",hint:"./components "});console.log({dirName:r}),r&&(s=r);let i=o.join(process.cwd(),s),g=o.join(process.cwd(),"/src"),w=P(i),G=!1;if(w){console.log("The component alredy existed");let{proceed:t}=await f({type:"confirm",name:"proceed",message:"Ready to install components and dependencies. Proceed?",initial:!0})}await n.mkdir(i,{recursive:!0});let h="";h=`${e}.tsx`;let u=o.join(process.cwd()+"/src","index.ts"),A=await n.readFile(u,"utf8"),y=o.join(process.cwd()+"/src","comp.json"),x=await n.readFile(y,"utf8"),c=(await JSON.parse(x)).find(t=>t.id===e),j=c.comp_path,I=c.depends_on,p=[j,...I],k=T("Installing components...").start();console.log({write_together:p}),p.map(async t=>{let N=o.join(g,"commands"),d=o.join(N,t);console.log({file_path_read:d});let S=await n.readFile(d,"utf8"),v=o.join(i,t);await n.writeFile(v,S)});let m=c.dependencies;m?.length&&await E("pnpm",["install",...m],{cwd:process.cwd()}),k.succeed("Successfully installed")}catch(s){console.log("Error: ",s)}});import O from"path";import C from"fs-extra";function _(){let e=O.join("package.json");return C.readJSONSync(e)}process.on("SIGINT",()=>process.exit(0));process.on("SIGTERM",()=>process.exit(0));async function F(){let e=await _(),a=new J().name("farmui").description("Add natively farmed farmUI blocks ").version(e.version||"1.0.0","-v, --version","display the version number");a.addCommand(l),a.parse()}F();
//# sourceMappingURL=index.js.map